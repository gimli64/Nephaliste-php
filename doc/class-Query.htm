<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class Query</title>
	<link type="text/css" rel="stylesheet" href="$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="help.htm" class="helpBtn">Help</a></li><li><a href="index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-Historique.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-Parametre.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">Query</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">Query</span></p><ul class="description"><li>Tout le travail des requetes. Retourné par un Modele.<br />
Gérer la vérification des données : remplacement par ? dans condition et ajout à prepare Gérer les requetes sur plusieurs tables : jointures, et les relations entre tables (relation ok, jointures : comment faire avec des objets dont les champs sont déjà déterminés ?) Enlever les foreach et mettre l'itérateur dans le Modele, renvoie un array d'attributs avec les valeurs ? <br />
Une requête est liée, lors de sa construction, à une table.<br />
<br />
Quand une méthode n'est rien censée rendre, elle rend l'objet lui-même, pour pouvoir chaîner les appels <br />
Etat actuel : aucune jointure. Tout est chargé à la demande. ...</li><li class="smaller">@author Bruno Cauet &lt;bruno.cauet@supelec.fr&gt;, Jocelyn Caulet &lt;jocelyn.cauet@supelec.fr&gt;</li><li class="smaller">@version 0.1</li><li>All subclasses: <a href="class-AdvancedQuery.htm" class="link2">AdvancedQuery</a></li><li>File: modeles/Query.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="DB"><a href="javascript:void(0);" class="property-pro" target="main">$DB</a><ul class="description"><li>Protected static <a href="datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">$DB</span><span class="defVal"> = null</span></li></ul></li><li class="Collapsed" id="where"><a href="javascript:void(0);" class="property-pro" target="main">$where</a><ul class="description"><li>Protected <a href="datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">$where</span></li></ul></li><li class="Collapsed" id="tri"><a href="javascript:void(0);" class="property-pro" target="main">$tri</a><ul class="description"><li>Protected <a href="datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">$tri</span></li></ul></li><li class="Collapsed" id="limit"><a href="javascript:void(0);" class="property-pro" target="main">$limit</a><ul class="description"><li>Protected <a href="datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">$limit</span></li></ul></li><li class="Collapsed" id="grouper"><a href="javascript:void(0);" class="property-pro" target="main">$grouper</a><ul class="description"><li>Protected <a href="datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">$grouper</span></li></ul></li><li class="Collapsed" id="modele"><a href="javascript:void(0);" class="property-pub" target="main">$modele</a><ul class="description"><li>Public <a href="datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">$modele</span></li></ul></li><li class="Collapsed" id="transaction"><a href="javascript:void(0);" class="property-pro" target="main">$transaction</a><ul class="description"><li>Protected static <a href="datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">$transaction</span></li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f4d84dc67b89f5"><a href="javascript:void(0);" class="method-pub" target="main">__construct</a>(<a href="datatype-mixed.htm" class="link">mixed</a> $modele)<ul class="description"><li>Public <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">__construct</span>(<a href="datatype-mixed.htm" class="link">mixed</a> $modele)</li><li>Constructeur de la classe</li><li class="smaller">@param $modele nom de la classe, héritant de Modele, sur laquelle on veut faire une requête</li></ul></li><li class="Collapsed" id="f4d84dc67b9134"><a href="javascript:void(0);" class="method-pub" target="main">fin</a>()<ul class="description"><li>Public <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">fin</span>()</li><li>Valide la transaction. Appelé à la fin du controleur.<br />
Pour la vue, il y aura self::$DB, mais pas de transaction. C'est pas grave, il n'y a que des select !</li></ul></li><li class="Collapsed" id="f4d84dc67b966c"><a href="javascript:void(0);" class="method-pro" target="main">getTable</a>()<ul class="description"><li>Protected <span class="link">le</span> <span class="smallTitle">getTable</span>()</li><li>Renvoie le nom de la table Utilisé car la syntaxe de php ne permet pas :: et -&gt; ensemble - et pas de passage de Classe, seulement de son nom</li><li class="smaller">@return le nom de la table MySQL correspondant au modèle</li></ul></li><li class="Collapsed" id="f4d84dc67b998e"><a href="javascript:void(0);" class="method-pub" target="main">trier</a>(<a href="datatype-mixed.htm" class="link">mixed</a> $ordre)<ul class="description"><li>Public <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">trier</span>(<a href="datatype-mixed.htm" class="link">mixed</a> $ordre)</li><li>Rajoute un order by dans la requete.<br />
usage : rien ou + (ASC/DESC) puis un attribut ou un calcul à effectuer par MySQL</li><li class="smaller">@param $ordre chaine représentant cet ordre de tri</li></ul></li><li class="Collapsed" id="f4d84dc67b9e09"><a href="javascript:void(0);" class="method-pub" target="main">filtrer</a>(<a href="datatype-mixed.htm" class="link">mixed</a> $condition)<ul class="description"><li>Public <span class="link">$this</span> <span class="smallTitle">filtrer</span>(<a href="datatype-mixed.htm" class="link">mixed</a> $condition)</li><li>Filtre sur un attribut : rajoute une clause where Pas de vérification de la syntaxe, car toute clause where acceptée par MySQL est utilisable</li><li class="smaller">@param $condition condition de filtrage respectant la syntaxt MySQL</li><li class="smaller">@return $this pour chaînage</li></ul></li><li class="Collapsed" id="f4d84dc67ba284"><a href="javascript:void(0);" class="method-pub" target="main">grouper</a>(<a href="datatype-mixed.htm" class="link">mixed</a> $by)<ul class="description"><li>Public <span class="link">$this</span> <span class="smallTitle">grouper</span>(<a href="datatype-mixed.htm" class="link">mixed</a> $by)</li><li>Rajoute une clause GROUP BY</li><li class="smaller">@param $attribut attribut selon lequel on veut grouper</li></ul></li><li class="Collapsed" id="f4d84dc67ba679"><a href="javascript:void(0);" class="method-pub" target="main">get</a>(<a href="datatype-mixed.htm" class="link">mixed</a> $condition)<ul class="description"><li>Public <span class="link">un</span> <span class="smallTitle">get</span>(<a href="datatype-mixed.htm" class="link">mixed</a> $condition)</li><li>Renvoie un résultat : ligne de mysql</li><li class="smaller">@param $condition condition de filtrage respectant la syntaxt MySQL</li><li class="smaller">@return un unique résultat, objet de type $this-&gt;modele</li></ul></li><li class="Collapsed" id="f4d84dc67bac99"><a href="javascript:void(0);" class="method-pub" target="main">limiter</a>(<a href="datatype-mixed.htm" class="link">mixed</a> $de, <a href="datatype-mixed.htm" class="link">mixed</a> $a)<ul class="description"><li>Public <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">limiter</span>(<a href="datatype-mixed.htm" class="link">mixed</a> $de, <a href="datatype-mixed.htm" class="link">mixed</a> $a)</li><li>clause LIMIT de la requête</li><li class="smaller">@param $a rang inférieur de la limite</li><li class="smaller">@param $de rang supérieur de la limite</li></ul></li><li class="Collapsed" id="f4d84dc67bb17e"><a href="javascript:void(0);" class="method-pub" target="main">executer</a>()<ul class="description"><li>Public <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">executer</span>()</li><li>Execute une requete La table, les join, les where</li><li class="smaller">@returns tableau des lignes renvoyées, sous forme d'objet $modele</li></ul></li><li class="Collapsed" id="f4d84dc67bba0e"><a href="javascript:void(0);" class="method-pri" target="main">nettoyer</a>(<a href="datatype-mixed.htm" class="link">mixed</a> $valeur)<ul class="description"><li>Private static <span class="link">variable</span> <span class="smallTitle">nettoyer</span>(<a href="datatype-mixed.htm" class="link">mixed</a> $valeur)</li><li>Nettoie la valeur pour mySQL. Utilisé par sauver et maj Si c'est NOW() ou un entier, on ne l'échappe pas. Si c'est null, on le transforme en 'null' et on ne l'échappe pas</li><li class="smaller">@param $valeur variable à nettoyer</li><li class="smaller">@return variable nettoyée</li></ul></li><li class="Collapsed" id="f4d84dc67bbf30"><a href="javascript:void(0);" class="method-pub" target="main">sauver</a>(<a href="datatype-array.htm" class="link">array</a> &#38;$valeurs)<ul class="description"><li>Public <span class="link">id</span> <span class="smallTitle">sauver</span>(<a href="datatype-array.htm" class="link">array</a> &#38;$valeurs)</li><li>Sauvegarde un nouvel objet</li><li class="smaller">@param $valeurs valeurs d'un objet de type $this-&gt;modele qu'on veut sauvegarder, sous forme d'un array. Plutôt appelé par le modèle que directement.</li><li class="smaller">@return id de l'objet si réussite, null sinon</li></ul></li><li class="Collapsed" id="f4d84dc67bc6c0"><a href="javascript:void(0);" class="method-pub" target="main">maj</a>(<a href="datatype-array.htm" class="link">array</a> &#38;$valeurs)<ul class="description"><li>Public <a href="datatype-bool.htm" class="link">bool</a> <span class="smallTitle">maj</span>(<a href="datatype-array.htm" class="link">array</a> &#38;$valeurs)</li><li>Met un objet à jour</li><li class="smaller">@param &amp;$valeurs valeurs d'un objet de type $this-&gt;modele qu'on veut mettre à jour. Plutôt appelé par le modèle que directement.</li><li class="smaller">@return bool réussite de la requête</li></ul></li><li class="Collapsed" id="f4d84dc67bcd4d"><a href="javascript:void(0);" class="method-pub" target="main">delete</a>(<a href="class-Modele.htm" class="link">Modele</a> &#38;$objet)<ul class="description"><li>Public <span class="link">l'objet</span> <span class="smallTitle">delete</span>(<a href="class-Modele.htm" class="link">Modele</a> &#38;$objet)</li><li>Supprime un objet de la DB</li><li class="smaller">@param $objet objet de type $this-&gt;modele qu'on veut supprimer. Plutôt appelé par le modèle que directement.</li><li class="smaller">@return l'objet fourni</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Mar 19, 2011, 17:40:07 +0100 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>